# Configure jenkins-blueocean

## Initial setup

https://jenkins.io/doc/book/installing/

docker network create jenkins

docker volume create jenkins-docker-certs
docker volume create jenkins-data

docker container run --name jenkins-docker --rm --detach --privileged --network jenkins --network-alias docker --env DOCKER_TLS_CERTDIR=/certs --volume jenkins-docker-certs:/certs/client --volume jenkins-data:/var/jenkins_home --volume ${pwd}:/home docker:dind

docker container run --name jenkins-blueocean --rm --detach --network jenkins --env DOCKER_HOST=tcp://docker:2376 --env DOCKER_CERT_PATH=/certs/client --env DOCKER_TLS_VERIFY=1 --volume jenkins-data:/var/jenkins_home --volume jenkins-docker-certs:/certs/client:ro --volume ${pwd}:/home --publish 8080:8080 --publish 50000:50000 jenkinsci/blueocean

## Post-installation

We use webhooks but that requires you to expose your CI server to the public internet (you can still whitelist IPs though).

https://webhookrelay.com/blog/2017/11/23/github-jenkins-guide/

Example:

docker exec -it -u 0 jenkins-blueocean bin/bash
sudo wget -O /usr/local/bin/relay https://storage.googleapis.com/webhookrelay/downloads/relay-linux-386

chmod 777 -R /usr/local/bin/relay

relay login -k your-token-key -s your-token-secret

relay login -k c41d7529-9c4b-4f84-9eef-2aadbd6ae1c8 -s oSDHvcKWDdIC

export RELAY_KEY=c41d7529-9c4b-4f84-9eef-2aadbd6ae1c8
export RELAY_SECRET=oSDHvcKWDdIC

relay forward --bucket github-jenkins http://localhost:8080/github-webhook/

Forwarding:
https://my.webhookrelay.com/v1/webhooks/d1de96fa-8764-403d-acbe-37aab955d207 -> http://localhost:8080/github-webhook/
Starting webhook relay agent...
2020-01-28 05:06:44.071 INFO    using standard transport...
2020-01-28 05:06:44.167 INFO    webhook relay ready...  {"host": "my.webhookrelay.com:8080", "buckets": ["9fb70da7-0cbf-4cb7-9c18-b584fef8cd32"]}


